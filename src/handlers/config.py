import logging
from aiogram import types, F
from src.database import db

logger = logging.getLogger(__name__)

async def download_config(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    
    if not db.has_user_checked_channel(user_id):
        await callback.message.edit_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!", reply_markup=db.subscription_check_keyboard())
        return
    
    vmess_uuid = db.get_user_vmess_uuid(user_id)
    server = db.get_active_server()
    
    if not server:
        await callback.message.edit_text("‚ùå –°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    server_ip = server[1]
    
    import json
    import base64
    
    vmess_config = {
        "v": "2",
        "ps": "Bunker VPN",
        "add": server_ip,
        "port": "443",
        "id": vmess_uuid,
        "aid": "0",
        "scy": "auto",
        "net": "ws",
        "type": "none",
        "path": "/vmess",
        "tls": "tls"
    }
    
    vmess_url = "vmess://" + base64.b64encode(json.dumps(vmess_config).encode()).decode()
    
    config_text = f"""
üåê –í–∞—à VPN –∫–æ–Ω—Ñ–∏–≥

üì° –°–µ—Ä–≤–µ—Ä: {server_ip}
üîë UUID: {vmess_uuid}

üì• VMess –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
{vmess_url}

üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ VPN –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É
    """
    
    await callback.message.edit_text(config_text, parse_mode='HTML')